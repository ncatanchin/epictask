@import "styles/mixins.global";

//Global Container in normal mode
.searchPanel {
	//@include make-default-transition();
	composes: flex-column-center flex-scale from 'styles/flex.css';
	position: relative;
	background-color: transparent !important;
	flex: 1 1 50%;
	height: 100%;
	overflow: hidden;
}


// Expanded mode
.searchPanelExpanded {
	composes: searchPanel;
	position: absolute;
	left: 0;
	top: 50%;
	width: 70%;
	max-width: 70%;
	height: 40% !important;
	max-height: 40% !important;
	min-height: 40% !important;
	overflow: auto;
}

.inputWrapper {
	//padding: 0 1rem;
	position: relative;
	width: 100%;

	composes: flex-column flex-scale from 'styles/flex.css';

	> div:not(.results) {
		flex: 0 0 auto;
	}

	> div.results {
		//flex: 1 1 auto;
		max-height: 100%;
		overflow: auto !important;
	}

}

.searchWrapper {
	position: relative;
	width: 100%;
	border-radius: 0.2rem;



	> div, >div >div, >div >div>div {
		width: 100% !important;
		position: relative;
	}

	>div >div:not(.results) {
		padding: 0 1rem !important;
		height: 100%;
	}

	input {
		background-color: transparent;
		width: 100% !important;
	}

	hr {
		opacity: 0;
		width: 100% !important;

	}

	input, hr {

	}

	&, input {
		@include make-default-transition('color,background-color,border,padding');
	}



}

.focused {
	// background-color: #{map-get($dark,'alternateBgColor')} !important;
	border-bottom-left-radius: 0 !important;
	border-bottom-right-radius: 0 !important;

	hr {
		opacity: 1;
	}

	input {
		// color: #{map-get($dark,'alternateTextColor')} !important;
	}
}


.searchWrapperExpanded {

	composes: searchWrapper;
	display: flex;
	position: absolute;
	//composes: flex-column from 'styles/flex.css';
	left: 50%;
	top: 0;

	max-width: 70%;
	width: 70%;
	transform: translate(-50%,0);
	max-height: 100% !important;
	//composes: flex-row-center from 'styles/flex.css';
	//flex: 0 0 auto;
}
