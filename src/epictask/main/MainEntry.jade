doctype html
html.fill-width.fill-height(lang="en")

	head
		meta(charset='utf-8')
		link(rel="stylesheet",type="text/css",href=baseDir + "/node_modules/splash-screen/dist/splash.min.css")
		script(src=baseDir + "/node_modules/splash-screen/dist/splash.min.js")
		link(rel="stylesheet",href=baseDir + "/node_modules/animate.css/animate.css")
		link(rel="stylesheet",href=baseDir + "/node_modules/font-awesome/css/font-awesome.min.css")
		link(rel="stylesheet",href=baseDir + "/node_modules/highlight.js/styles/dark.css")
		link(rel="stylesheet",href=baseDir + "/node_modules/simplemde/dist/simplemde.min.css")
		//link(rel="stylesheet",href=baseDir + "/node_modules/highlight.js/styles/default.css")
		meta(name="viewport",content="width=device-width, initial-scale=1")

		title epic.ly
		style=cssGlobal
		script(id='et-loader').
			var electron = require('electron'),
					remote = electron.remote,
					ipc = electron.ipcRenderer

			function checkBooted() {
				window.booted = remote.getGlobal("MainBooted")
				return window.booted
			}

			console.log('Main has booted = ',checkBooted())

			var Splash = window.Splash

			// Load jQuery to help with debugging more than anything else
			if (!window.$)
				window.$ = require('jquery')

			// Make sure we have a global log function
			if (!window.log)
				window.log = remote.getGlobal('getLogger')('MainEntry.jade')


			// Add getStyles - short for getComputedStyle
			if (!$.fn.getStyles) {
				$.fn.getStyles = function () {
					var styles = window.getComputedStyle(this[0])
					var styleObj = {}
					for (var i = 0; i < styles.length;i++) {
						var prop = styles[i]
						var val = styles[prop]
						if (val)
							styleObj[prop] = val
					}
					console.log(styleObj)
					log.info('styles',styleObj)
					return styleObj
				}
			}
			var baseDir = "#{baseDir}"
			var loaded = false
			var isDev = "#{Env.isDev}" === 'true'

			// Add a script tag to load content
			function addScript(scriptPath,asyncLoad,callback) {
				const script = document.createElement('script');
				const basePath = (isDev) ? 'http://localhost:4444/dist' : baseDir + '/dist';

				script.type = 'text/javascript'
				if (asyncLoad) {
					log.debug('Loading script async', scriptPath)
					script.async = true
					if (callback)
						script.onload = callback
				}

				script.src = basePath + scriptPath

				document.body.appendChild(script)
			}

			window.loadEpicTask = function() {

				log.info('Loading UI')

				if (loaded) {
					if (!isDev) {
						console.warn('loadEpicTask is disabled in non dev mode')
						return
					}

					console.log('Reloading content in dev mode')

					var sElem = document.getElementById('et-loader')
					var nextElem = sElem
					while (nextElem = nextElem.nextSibling) {
						nextElem.parentNode.removeChild(nextElem)
					}
				}

				loaded = true
				document.body.innerHTML = "<div id='root' class='fill-width fill-height'></div>"

				if (!isDev) {
					const link = document.createElement('link');
					link.rel = 'stylesheet';
					link.href = baseDir + '/dist/style.css';
					document.write(link.outerHTML);
				}

				// Load the entry script
				addScript('/UIEntry.js', true, function() {
					if (checkBooted())
						onUIReady(null,true)
				})

			}

			function onUIReady(event,force) {
				console.log('UI Ready Called, force=',force,
						'event type =', (event && event.data) && event.data.type)

				if (force || (event && event.data && event.data.type === "#{Events.UIReady}")) {
					Splash.destroy()
				}
			}

			window.onload = function() {
				console.log('on load event')
				if (checkBooted()) {
					console.log('window already booted, loading immediately')
					loadEpicTask()
				} else {
					console.log('waiting for main ready event now')
					ipc.on("#{Events.MainReady}", function () {
						console.log('IPC Received load request')
						loadEpicTask()
					})
				}

				window.addEventListener('message', onUIReady)
			}


	body.fill-width.fill-height(style="-webkit-app-region: drag")
		script.
			Splash.enable('windcatcher')


